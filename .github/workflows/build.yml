name: build
on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Nuget/
    steps:
    - name: Check out Code 
      uses: actions/checkout@v4

    - name: Run SQL Server
      run: |
        # If the password generator needs to be changed, make sure the resulting password meets SQL Server password requirements
        sa_pw=$(uuidgen) 
        echo "::add-mask::$sa_pw"

        echo "Starting SQL Server in a Docker container..."
        docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=$sa_pw" -e "MSSQL_PID=Developer" -e "MSSQL_COLLATION=SQL_Latin1_General_CP1_CS_AS" -p 1433:1433 --name sqlserver -d mcr.microsoft.com/mssql/server:2022-latest
        
        echo "Setting environment variables for sqlcmd..."
        echo "SQLCMDPASSWORD=$sa_pw" >> $DB_CONNECTION_STRING
        echo "SQLCMDUSER=sa" >> $DB_CONNECTION_STRING
        echo "SQLCMDSERVER=localhost,1433" >> $DB_CONNECTION_STRING

        echo "Setting environment variable $DB_CONNECTION_STRING to SQL connection string..."
        echo "$DB_CONNECTION_STRING=Server=localhost;Database=EFConcurrencyTests;User Id=sa;Password=$sa_pw;Encrypt=false;TrustServerCertificate=true" >> $DB_CONNECTION_STRING  
        # Wait for availability then create initial catalog

        for ($i = 1; $i -le 30; $i++) {
          Write-Output "Attempt $i/30 to connect to SQL Server..."
          sqlcmd -b -Q "SELECT @@SERVERNAME as ServerName" 2>&1>$null
          if ($?) {
            Write-Output "  - SQL Server is now ready"
            break
          } else {
            Write-Output "  - Not ready, sleeping for 5s"
            Start-Sleep -seconds 5
          }
        }

        Write-Output "Creating initial catalog 'EFConcurrencyTests'"
        sqlcmd -Q "CREATE DATABASE [EFConcurrencyTests]"
    
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: | 
          8.0.x
          9.0.x

    - name: Restore dependencies
      run: dotnet restore
            
    - name: Build dotnet 
      run: dotnet build EntityFramework.Concurrency.sln --configuration release --no-restore
      
    - name: Run Tests
      run: dotnet test
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: "artifact"
        path: Nuget/

